get_plugs() {
	local profile=$1
	case "$2" in
		all) all_plugs ;;
		this) this_plug "$profile" ;;
		not) comm -23 <(all_plugs) <(this_plug "$profile") ;;
		*) echo ;;
	esac
}

all_plugs() {
	volt list -f "{{ range .Repos }}{{ println .Path }}{{ end }}" | sed -e 's/github\.com\///' | sed -e '/^www\./d' | sort
}

this_plug() {
	volt list -f "{{ range .Profiles }}{{ if eq \"$1\" .Name }}{{ range .ReposPath }}{{ println . }}{{ end }}{{ end }}{{ end }}" | sed -e 's/github\.com\///' | sed -e '/^www\./d' | sort
}

CMDS="get rm list enable disable profile build migrate self-upgrade version"
PROFILE_CMDS="set show list new destroy rename add rm"
MIGRATE_CMDS="lockjson plugconf/config-func"

_volt() {
	COMPREPLY=()
	local cur="${COMP_WORDS[COMP_CWORD]}"
	local first="${COMP_WORDS[1]}"
	local second="${COMP_WORDS[2]}"
	local third="${COMP_WORDS[3]}"

	if [[ "${first}" == "profile" && ${second} =~ ^(set|show|list|new|destroy|rename|add|rm)$ && ${third} == "" ]] ; then
		local profiles=$(volt profile list | sed 's/[* ] //')
		COMPREPLY=( $(compgen -W "$(echo $profiles)" -- ${cur}) )
		return 0
	elif [[ "${first}" == "profile" && ${second} == "add" && ${third} ]] ; then
		plugs=$(get_plugs "$third" "not")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" == "profile" && ${second} == "rm" && ${third} ]] ; then
		plugs=$(get_plugs "$third" "this")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" == "profile" && "${third}" == "" ]] ; then
		COMPREPLY=( $(compgen -W "${PROFILE_CMDS}" -- ${cur}) )
		return 0
	elif [[ "${first}" =~ ^(rm|disable)$ ]] ; then
		local profile=$(volt list -f '{{ .CurrentProfileName }}')
		plugs=$(get_plugs "$profile" "this")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" =~ ^(get|enable)$ ]] ; then
		local profile=$(volt list -f '{{ .CurrentProfileName }}')
		plugs=$(get_plugs "$profile" "not")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" == "migrate" ]] ; then
		COMPREPLY=( $(compgen -W "${MIGRATE_CMDS}" -- ${cur}) )
		return 0
	elif [[ "${third}" == "" ]] ; then
		COMPREPLY=( $(compgen -W "${CMDS}" -- ${cur}) )
		return 0
	fi
}
complete -F _volt volt
