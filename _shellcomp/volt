get_plugs() {
	local all_plugs=$(mktemp)
	local this_plugs=$(mktemp)
	local profile=$1
	local set=$2
	volt list -f "{{ range .Repos }}{{ println .Path }}{{ end }}" | sed -e 's/github\.com\///' | sed -e '/^www\./d' | sort > $all_plugs
	volt list -f "{{ range .Profiles }}{{ if eq \"$profile\" .Name }}{{ range .ReposPath }}{{ println . }}{{ end }}{{ end }}{{ end }}" | sed -e 's/github\.com\///' | sed -e '/^www\./d' | sort > $this_plugs
	if [[ $set == "all" ]] ; then
		cat $all_plugs
	elif [[ $set == "this" ]] ; then
		cat $this_plugs
	elif [[ $set == "not" ]] ; then
		comm -23 $all_plugs $this_plugs
	else
		echo
	fi
	rm $this_plugs $all_plugs
	return
}

CMDS="get rm list enable disable profile build migrate self-upgrade version"
PROFILE_CMDS="set show list new destroy rename add rm"
MIGRATE_CMDS="lockjson plugconf/config-func"

_volt() {
	COMPREPLY=()
	local cur="${COMP_WORDS[COMP_CWORD]}"
	local first="${COMP_WORDS[1]}"
	local second="${COMP_WORDS[2]}"
	local third="${COMP_WORDS[3]}"
	local profiles=$(volt profile list | sed -e 's/\*//' | tr '\n' ' ')
	local profile=$(volt list | head -1 | sed -e 's/name:\s//')

	if [[ "${first}" == "profile" && ${second} =~ ^(set|show|list|new|destroy|rename|add|rm)$ && ${third} == "" ]] ; then
		COMPREPLY=( $(compgen -W "${profiles}" -- ${cur}) )
		return 0
	elif [[ "${first}" == "profile" && ${second} == "add" && ${third} ]] ; then
		plugs=$(get_plugs "$third" "not")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" == "profile" && ${second} == "rm" && ${third} ]] ; then
		plugs=$(get_plugs "$third" "this")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" == "profile" && "${third}" == "" ]] ; then
		COMPREPLY=( $(compgen -W "${PROFILE_CMDS}" -- ${cur}) )
		return 0
	elif [[ "${first}" =~ ^(rm|disable)$ ]] ; then
		plugs=$(get_plugs "$profile" "this")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" =~ ^(get|enable)$ ]] ; then
		plugs=$(get_plugs "$profile" "not")
		COMPREPLY=( $(compgen -W "${plugs}" -- ${cur}) )
		return 0
	elif [[ "${first}" == "migrate" ]] ; then
		COMPREPLY=( $(compgen -W "${MIGRATE_CMDS}" -- ${cur}) )
		return 0
	elif [[ "${third}" == "" ]] ; then
		COMPREPLY=( $(compgen -W "${CMDS}" -- ${cur}) )
		return 0
	fi
}
complete -F _volt volt
